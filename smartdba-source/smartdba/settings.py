"""
Django settings for smartdba project.

Generated by 'django-admin startproject' using Django 2.1.12.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import logging.config
from django.urls import reverse

import configparser

config = configparser.ConfigParser()
config.read('./config.ini')

SSO_REDIRECT_URI = config['DB_INFO']['SSO_PATH']
DIV_DP = config['DB_INFO']['DIV_DP']

MYSQL_NAME = config['DB_INFO']['MYSQL_NAME']
MYSQL_USER = config['DB_INFO']['MYSQL_USER']
MYSQL_PASSWORD = config['DB_INFO']['MYSQL_PASSWORD']
MYSQL_HOST = config['DB_INFO']['MYSQL_HOST']
MYSQL_PORT = config['DB_INFO']['MYSQL_PORT']

DJANGO_MYSQL_REWRITE_QUERIES = True

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

SECRET_KEY = 'a5pwbok%klp#!t_0@%x7uo%oa3_7r-1%l%jalbh2r(p-!x)wwk'
DEBUG = True

ALLOWED_HOSTS = '*'

TEMPLATE_CONTEXT_PROCESSORS=(
"django.contrib.auth.context_processors.auth",
"django.core.context_processors.debug",
"django.core.context_processors.i18n",
"django.core.context_processors.media",
"django.core.context_processors.static",
"django.core.context_processors.tz",
"django.contrib.messages.context_processors.messages",
"django.core.context_processors.request"
)





AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend', # Django가 관리하는 AUTH
    # 'authmon.my_auth.MyBackend', # 우리가 만든 AUTH를 먼저 검사
]



INSTALLED_APPS = [
    'dal',
    'dal_select2',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'accounts.apps.AccountsConfig',
    'database.apps.DatabaseConfig',
    'authmon.apps.AuthmonConfig',
    'admin_reorder',
    'django_extensions',
    'django_summernote',
    'crispy_forms',
    'widget_tweaks',
    'bootstrap4',
    'bootstrap_datepicker_plus',
    'django.contrib.humanize',
    'import_export',
    'django_safe_fields',
]


# settings.py
GRAPH_MODELS = {
  'all_applications': True,
  'group_models': True,
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'admin_reorder.middleware.ModelAdminReorder',
]

ROOT_URLCONF = 'smartdba.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'smartdba.wsgi.application'

DATABASES = {

    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': MYSQL_NAME,
        'USER': MYSQL_USER,
        'PASSWORD': MYSQL_PASSWORD,
        'HOST': MYSQL_HOST,
        'PORT' : MYSQL_PORT,
        'OPTIONS': {
            "unix_socket": "/applications/mysql/tmp/mysql.sock",
        }
    },
}


LANGUAGE_CODE = 'ko-kr'
TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = False

USE_DJANGO_JQUERY = True

STATIC_URL = '/static/'
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]
LOGGING ={
"version": 1,
"formatters": {
"simple": {
"format": "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
}
},

"handlers": {
"console": {
"class": "logging.StreamHandler",
"level": "INFO",
"formatter": "simple",
"stream": "ext://sys.stdout"
},

"info_file_handler": {
"class": "logging.FileHandler",
"level": "DEBUG",
"formatter": "simple",
"filename": "myLog.log"
}
},

"root": {
"level": "DEBUG",
"handlers": ["console", "info_file_handler"]
}
}

# SESSION_COOKIE_AGE = 2400
SESSION_SAVE_EVERY_REQUEST = True
SESSION_COOKIE_AGE = 1 * 60 * 60 * 24
LOGIN_REDIRECT_URL = '/'
LOGIN_URL = '/accounts/login/'
DATA_UPLOAD_MAX_MEMORY_SIZE = 100000000
DATA_UPLOAD_MAX_NUMBER_FIELDS = 10240



ADMIN_REORDER = (
    # Reorder app models
    {'app': 'database', 'label': '1.메타 표준 관리','models': (
                                                        'database.StdWord',
                                                        'database.StdDomain',
                                                        'database.StdAttr',
                                                        'database.StdDataType',
                                                  )},
    {'app': 'database', 'label': '2.업무 도메인','models': (
                                                        'database.Domain',
                                                        'database.DomainAndDbList',
                                                  )},
    {'app': 'database', 'label': '3.변경 관리','models': (
                                                        'database.WeekDBA',
                                                        'database.DataModel',
                                                        'database.MetaReq',
                                                        'database.DBOwner',
                                                        'database.MetaGrantList',
                                                        'database.MetaGrantDetail',
                                                        'database.DBTablespace',
                                                        'database.SendEmailTargetList',
                                                        'database.MetaReqWeekDay',
                                                  )},    
    {'app': 'database', 'label': '4.DBMS 관리','models': (
                                                        'database.DbList',
                                                        'database.DbDetail',
                                                        'database.DbPosition',
                                                        'database.Db',
                                                        'database.DbType',
                                                        'database.OperCd',
                                                        'database.HaCase',
                                                  )},
     {'app': 'database', 'label': '5.계정 관리','models': (
                                                        'database.DbUser',
                                                        'database.OsUser',
                                                  )},
    {'app': 'database', 'label': '6.DB모니터링 관리','models': (
                                                        'database.MonitorManagement',
                                                        # 'database.MonitorManage',
                                                        'database.MonitorItem',
                                                        'database.MonitorItemList',
                                                        'database.DBDetailMonitorItemList',
                                                        'database.MonitorItemLog',
                                                        'database.MonitorTablespace',
                                                  )},
    {'app': 'database', 'label': '7.SmartDBA 관리','models': (
                                                        'database.UserVisit',
                                                        'database.BatchList',
                                                        'auth.User',
                                                        'auth.Group',
                                                        'database.MenuList',
                                                        'database.MenuPermission',
                                                        'database.AirflowDagManage',
                                                  )},
    {'app': 'database', 'label': '8.테이블 관리','models': (
                                                        'database.TableList',                                                        
                                                  )},
    {'app': 'database', 'label': '9.튜닝 관리','models': (
                                                        'database.TuningList',
                                                        'database.TuningStatus',
                                                        'database.ProjectList',
                                                  )},
     {'app': 'database', 'label': '10.권한 관리','models': (
                                                        'database.UserRequestTabPrivHist',
                                                        'database.UserList',
                                                        'database.UserRequestAccountOpenHist',
                                                  )},
     {'app': 'database', 'label': '11.데이터가 궁금해','models': (
                                                        'database.DataList',
                                                        'database.DataRequest',
                                                        'database.DataType',
                                                        'database.UserExecuteSQL',
                                                  )},
    {'app': 'auth', 'models': ('auth.User', 'auth.Group')},

    # # Exclude models
    # {'app': 'auth', 'models': ('auth.User', )},

    # # Cross-linked models
    # {'app': 'auth', 'models': ('auth.User', 'sites.Site')},

    # models with custom name
    # {'app': 'auth', 'models': (
    #     'auth.Group',
    #     {'model': 'auth.User', 'label': 'Staff'},
    # )},
)