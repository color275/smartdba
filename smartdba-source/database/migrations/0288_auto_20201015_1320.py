# Generated by Django 3.0.6 on 2020-10-15 13:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('database', '0287_datamodel_exp_order'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='dbdetailmonitoritemlist',
            options={'verbose_name': '모니터링 항목 등록 - 한 개 이상 등록 시 모니터링 활성화 ( Health Check 일 경우 임계치는 OPEN 입력 )', 'verbose_name_plural': '모니터링 항목 등록 - 한 개 이상 등록 시 모니터링 활성화 ( Health Check 일 경우 임계치는 OPEN 입력 )'},
        ),
        migrations.AlterField(
            model_name='columnlist',
            name='id_dblist',
            field=models.ForeignKey(blank=True, db_column='id_dblist', null=True, on_delete=django.db.models.deletion.PROTECT, to='database.DbList', verbose_name='DB용도'),
        ),
        migrations.AlterField(
            model_name='databasemap',
            name='id_dblist',
            field=models.ForeignKey(blank=True, db_column='id_dblist', null=True, on_delete=django.db.models.deletion.PROTECT, to='database.DbList', verbose_name='DB용도'),
        ),
        migrations.AlterField(
            model_name='datalist',
            name='id_dblist',
            field=models.ForeignKey(db_column='id_dblist', default=39, help_text='"데이터허브DB"를 제외한 나머지 DB는 성능 승인을 받은 후 수행할 수 있습니다.', null=True, on_delete=django.db.models.deletion.PROTECT, to='database.DbList', verbose_name='DB용도'),
        ),
        migrations.AlterField(
            model_name='datamodel',
            name='id_dblist',
            field=models.ForeignKey(blank=True, db_column='id_dblist', null=True, on_delete=django.db.models.deletion.CASCADE, to='database.DbList', verbose_name='DB용도'),
        ),
        migrations.AlterField(
            model_name='dbdetail',
            name='alert_yn',
            field=models.CharField(blank=True, choices=[('1', 'Y'), ('0', 'N')], default='0', help_text='Alert 여부. N 일 경우 Alert 만 비활성화', max_length=30, null=True, verbose_name='Alert여부'),
        ),
        migrations.AlterField(
            model_name='dbdetail',
            name='db_nm',
            field=models.CharField(blank=True, help_text='MySQL 일 경우 show database 명 입력', max_length=100, verbose_name='DB명'),
        ),
        migrations.AlterField(
            model_name='dbdetail',
            name='db_order',
            field=models.IntegerField(default=1, help_text='ex) SMTC11 : 1, SMTC12 : 2, Master : 1, Slave : 2', verbose_name='DB노드번호'),
        ),
        migrations.AlterField(
            model_name='dbdetail',
            name='id_dblist',
            field=models.ForeignKey(blank=True, db_column='id_dblist', null=True, on_delete=django.db.models.deletion.CASCADE, to='database.DbList', verbose_name='DB용도'),
        ),
        migrations.AlterField(
            model_name='dbdetail',
            name='id_sms_receive_user',
            field=models.ManyToManyField(blank=True, db_table='cust_monitor_sms_receive_user', help_text='DBA 외에 모니터링 알람을 받는 담당자', max_length=300, related_name='cust_monitor_sms_receive_user', to=settings.AUTH_USER_MODEL, verbose_name='모니터링 SMS 수신 인원(복수 선택 가능)'),
        ),
        migrations.AlterField(
            model_name='dbdetail',
            name='inst_nm',
            field=models.CharField(blank=True, help_text='MySQL 일 경우 show database 명 입력', max_length=100, verbose_name='인스턴스명'),
        ),
        migrations.AlterField(
            model_name='dbdetail',
            name='monitor_yn',
            field=models.CharField(blank=True, choices=[('1', 'Y'), ('0', 'N')], default='0', help_text='모니터링 여부. N 일 경우 모니터링, Alert 모두 비활성화 됨', max_length=30, null=True, verbose_name='모니터링여부'),
        ),
        migrations.AlterField(
            model_name='dbdetail',
            name='use_yn',
            field=models.CharField(blank=True, choices=[('1', 'Y'), ('0', 'N')], default='1', help_text='서버 사용 여부. N 일 경우 모든 이벤트(모니터링, Alert 등)에서 제외', max_length=30, null=True, verbose_name='사용여부'),
        ),
        migrations.AlterField(
            model_name='dblist',
            name='db_use',
            field=models.CharField(max_length=100, verbose_name='DB용도'),
        ),
        migrations.AlterField(
            model_name='dblist',
            name='emp_privacy_yn',
            field=models.CharField(blank=True, choices=[('1', 'Y'), ('0', 'N')], default='0', max_length=30, null=True, verbose_name='임직원 개인정보'),
        ),
        migrations.AlterField(
            model_name='dblist',
            name='exp_order',
            field=models.IntegerField(blank=True, default=999, help_text='화면에서 보이는 DB순서. ex) smtc : 1, webdb : 2', null=True, verbose_name='화면노출순서'),
        ),
        migrations.AlterField(
            model_name='dblist',
            name='gather_meta_yn',
            field=models.CharField(blank=True, choices=[('1', 'Y'), ('0', 'N')], default='0', help_text='Y 일 경우 테이블 메타 정보 수집 배치에 포함 됨', max_length=30, null=True, verbose_name='메타정보수집'),
        ),
        migrations.AlterField(
            model_name='dblist',
            name='infra_op_yn',
            field=models.CharField(blank=True, choices=[('1', 'Y'), ('0', 'N')], default='1', help_text='인프라팀에서 운영하고 있는 시스템인지...', max_length=30, null=True, verbose_name='인프라팀운영여부'),
        ),
        migrations.AlterField(
            model_name='dblist',
            name='map_coords',
            field=models.CharField(blank=True, help_text='데이터베이스 지도에서의 마우스 클릭 좌표. null 입력 가능', max_length=100, null=True, verbose_name='Database MAP 좌표'),
        ),
        migrations.AlterField(
            model_name='dblist',
            name='metareq_yn',
            field=models.CharField(blank=True, choices=[('1', 'Y'), ('0', 'N')], default='0', help_text='Y 일 경우 테이블 변경 관리 신청 가능', max_length=30, null=True, verbose_name='DBA변경관리'),
        ),
        migrations.AlterField(
            model_name='dblist',
            name='privacy_yn',
            field=models.CharField(blank=True, choices=[('1', 'Y'), ('0', 'N')], default='0', max_length=30, null=True, verbose_name='고객 개인정보'),
        ),
        migrations.AlterField(
            model_name='dblist',
            name='use_yn',
            field=models.CharField(blank=True, choices=[('1', 'Y'), ('0', 'N')], default='1', help_text='현재 운영되고 있는지... N 일 경우 모든 이벤트(변경관리, 모니터링 등)에서 제외됨', max_length=30, null=True, verbose_name='사용여부'),
        ),
        migrations.AlterField(
            model_name='dbowner',
            name='id_dblist',
            field=models.ForeignKey(blank=True, db_column='id_dblist', null=True, on_delete=django.db.models.deletion.CASCADE, to='database.DbList', verbose_name='DB용도'),
        ),
        migrations.AlterField(
            model_name='dbtablespace',
            name='id_dblist',
            field=models.ForeignKey(blank=True, db_column='id_dblist', null=True, on_delete=django.db.models.deletion.CASCADE, to='database.DbList', verbose_name='DB용도'),
        ),
        migrations.AlterField(
            model_name='domainanddblist',
            name='id_dblist',
            field=models.ForeignKey(blank=True, db_column='id_dblist', null=True, on_delete=django.db.models.deletion.PROTECT, to='database.DbList', verbose_name='DB용도'),
        ),
        migrations.AlterField(
            model_name='grantlist',
            name='id_dblist',
            field=models.ForeignKey(db_column='id_dblist', null=True, on_delete=django.db.models.deletion.PROTECT, to='database.DbList', verbose_name='DB용도'),
        ),
        migrations.AlterField(
            model_name='metagrantlist',
            name='id_dblist',
            field=models.ForeignKey(blank=True, db_column='id_dblist', null=True, on_delete=django.db.models.deletion.CASCADE, to='database.DbList', verbose_name='DB용도'),
        ),
        migrations.AlterField(
            model_name='metareq',
            name='id_dblist',
            field=models.ForeignKey(db_column='id_dblist', null=True, on_delete=django.db.models.deletion.PROTECT, to='database.DbList', verbose_name='DB용도'),
        ),
        migrations.AlterField(
            model_name='metareqlist',
            name='id_dblist',
            field=models.ForeignKey(blank=True, db_column='id_dblist', null=True, on_delete=django.db.models.deletion.PROTECT, to='database.DbList', verbose_name='DB용도'),
        ),
        migrations.AlterField(
            model_name='monitoritemlog',
            name='id_dbdetail',
            field=models.ForeignKey(blank=True, db_column='id_dbdetail', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='database.DbDetail', verbose_name='DB상세'),
        ),
        migrations.AlterField(
            model_name='monitoritemlog',
            name='id_dblist',
            field=models.ForeignKey(blank=True, db_column='id_dblist', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='database.DbList', verbose_name='DB용도'),
        ),
        migrations.AlterField(
            model_name='monitoritemlog',
            name='id_dbtype',
            field=models.ForeignKey(blank=True, db_column='id_dbtype', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='database.DbType', verbose_name='DBMS종류'),
        ),
        migrations.AlterField(
            model_name='monitoritemlog',
            name='id_opercd',
            field=models.ForeignKey(blank=True, db_column='id_opercd', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='database.OperCd', verbose_name='운영구분'),
        ),
        migrations.AlterField(
            model_name='objectlist',
            name='id_dblist',
            field=models.ForeignKey(blank=True, db_column='id_dblist', on_delete=django.db.models.deletion.PROTECT, to='database.DbList', verbose_name='DB용도'),
        ),
        migrations.AlterField(
            model_name='tablelist',
            name='id_dblist',
            field=models.ForeignKey(blank=True, db_column='id_dblist', on_delete=django.db.models.deletion.PROTECT, to='database.DbList', verbose_name='DB용도'),
        ),
        migrations.AlterField(
            model_name='tuninglist',
            name='id_dblist',
            field=models.ForeignKey(blank=True, db_column='id_dblist', default=10, null=True, on_delete=django.db.models.deletion.PROTECT, to='database.DbList', verbose_name='DB용도'),
        ),
        migrations.AlterField(
            model_name='userlist',
            name='id_dblist',
            field=models.ForeignKey(blank=True, db_column='id_dblist', on_delete=django.db.models.deletion.CASCADE, to='database.DbList', verbose_name='DB용도'),
        ),
    ]
