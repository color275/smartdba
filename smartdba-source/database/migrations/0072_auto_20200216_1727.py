# Generated by Django 2.1.5 on 2020-02-16 17:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('database', '0071_auto_20200129_2229'),
    ]

    operations = [
        migrations.CreateModel(
            name='DataRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('csr_no', models.CharField(max_length=1000, null=True, verbose_name='CSR번호')),
                ('data_title', models.CharField(max_length=1000, null=True, verbose_name='제목')),
                ('data_explain', models.TextField(null=True, verbose_name='설명')),
                ('data_input', models.CharField(max_length=1000, null=True, verbose_name='입력값')),
                ('reg_dtm', models.DateTimeField(auto_now_add=True, verbose_name='등록일자')),
                ('mod_dtm', models.DateTimeField(auto_now=True, verbose_name='수정일자')),
                ('prov_yn_dtm', models.DateTimeField(null=True, verbose_name='승인 일자')),
                ('id_mod_user', models.ForeignKey(blank=True, db_column='id_mod_user', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='User_DataRequest_mod_user', to=settings.AUTH_USER_MODEL, verbose_name='수정자')),
                ('id_prov_user', models.ForeignKey(blank=True, db_column='id_prov_user', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='User_DataRequest_prov_user1', to=settings.AUTH_USER_MODEL, verbose_name='2차 승인(보안)')),
                ('id_reg_user', models.ForeignKey(blank=True, db_column='id_reg_user', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='User_DataRequest_reg_user', to=settings.AUTH_USER_MODEL, verbose_name='등록자')),
            ],
            options={
                'verbose_name': '[z99] 데이터 요청',
                'verbose_name_plural': '[z99] 데이터 요청',
                'db_table': 'cust_data_request',
            },
        ),
        migrations.DeleteModel(
            name='RegisterData',
        ),
        migrations.DeleteModel(
            name='TableListDataHubDHUBOWN',
        ),
        migrations.CreateModel(
            name='DataDocumentPRD',
            fields=[
            ],
            options={
                'verbose_name': '[데이터문서화-상품] 상품 데이터 문서화',
                'verbose_name_plural': '[데이터문서화-상품] 상품 데이터 문서화',
                'proxy': True,
                'indexes': [],
            },
            bases=('database.columnlist',),
        ),
        migrations.AlterModelOptions(
            name='userexecutesql',
            options={'verbose_name': '[DBA-12] 사용자 실행SQL 이력', 'verbose_name_plural': '[DBA-12] 사용자 실행SQL 이력'},
        ),
        migrations.AlterField(
            model_name='datalist',
            name='exp_yn',
            field=models.CharField(choices=[('1', 'Y'), ('0', 'N')], default='0', help_text='"Y" 상태이어야 다른 직원에게 공유됩니다.', max_length=100, null=True, verbose_name='노출여부'),
        ),
        migrations.AlterField(
            model_name='datalist',
            name='id_dblist',
            field=models.ForeignKey(db_column='id_dblist', default=39, help_text='"데이터허브DB"를 제외한 나머지 DB는 성능 승인을 받은 후 수행할 수 있습니다.', null=True, on_delete=django.db.models.deletion.PROTECT, to='database.DbList', verbose_name='DB명'),
        ),
        migrations.AlterField(
            model_name='datalist',
            name='id_domain',
            field=models.ForeignKey(db_column='id_domain', default=17, null=True, on_delete=django.db.models.deletion.PROTECT, to='database.Domain', verbose_name='업무도메인명'),
        ),
        migrations.AlterField(
            model_name='datalist',
            name='id_mod_psbl_users',
            field=models.ManyToManyField(blank=True, db_table='cust_datalist_user_id_mod_psbl_users', help_text='해당 데이터를 수정할 수 있는 직원입니다.', max_length=300, related_name='cust_datalist_user_id_mod_psbl_users', to=settings.AUTH_USER_MODEL, verbose_name='수정자 (복수 선택 가능)'),
        ),
        migrations.AlterField(
            model_name='datalist',
            name='id_req_users',
            field=models.ManyToManyField(blank=True, db_table='cust_datalist_user_id_req_users', help_text='해당 데이터를 조회할 수 있는 직원입니다.', max_length=300, related_name='cust_datalist_user_id_req_users', to=settings.AUTH_USER_MODEL, verbose_name='요청자 (복수 선택 가능)'),
        ),
        migrations.AlterField(
            model_name='datalist',
            name='privacy_yn',
            field=models.CharField(choices=[('1', 'Y'), ('0', 'N')], default='0', help_text='개인정보를 조회하는 경우 보안센터 승인을 받은 후 수행할 수 있습니다.', max_length=100, null=True, verbose_name='개인정보유무'),
        ),
        migrations.AlterField(
            model_name='datalist',
            name='prov_yn2_text',
            field=models.TextField(blank=True, help_text='반려 시 사유를 작성해주세요.', null=True, verbose_name='성능Comment'),
        ),
        migrations.AlterField(
            model_name='datalist',
            name='realoretl',
            field=models.CharField(choices=[('1', '실시간'), ('0', '분석')], default=0, max_length=100, null=True, verbose_name='실시간or분석'),
        ),
        migrations.AlterField(
            model_name='datalist',
            name='sql_text',
            field=models.TextField(blank=True, help_text='":"로 바인딩하여 SQL을 작성하면 동적으로 파라메터 값을 받을 수 있습니다. 예를들면, :상픔코드, :주문일자 와 같이 바인딩 사용 시 사용자가 SQL을 실행할 때 상품코드와 주문일자를 입력할 수 있습니다.<br><font color="red"><b>in (:in_param) 으로 사용 시 멀티 값 입력 가능합니다.</b></font>주의: :yyyy :mm :dd :hh :mi :ss :digit 등은 바인드 변수로 사용할 수 없습니다.', max_length=10000, null=True, verbose_name='관련SQL'),
        ),
        migrations.AlterField(
            model_name='tuninglist',
            name='asis_sql_text',
            field=models.TextField(blank=True, null=True, verbose_name='튜닝전SQL'),
        ),
        migrations.AlterField(
            model_name='tuninglist',
            name='id_dblist',
            field=models.ForeignKey(db_column='id_dblist', default=39, null=True, on_delete=django.db.models.deletion.PROTECT, to='database.DbList', verbose_name='DB명'),
        ),
        migrations.AlterField(
            model_name='tuninglist',
            name='id_domain',
            field=models.ForeignKey(blank=True, db_column='id_domain', default=17, null=True, on_delete=django.db.models.deletion.PROTECT, to='database.Domain', verbose_name='업무도메인명'),
        ),
    ]
