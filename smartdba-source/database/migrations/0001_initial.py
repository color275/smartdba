# Generated by Django 2.1.5 on 2020-01-05 20:32

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BatchList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_title', models.CharField(default='None', max_length=1000, verbose_name='배치 제목')),
                ('batch_system_name', models.CharField(default='None', max_length=1000, validators=[django.core.validators.RegexValidator('^[a-zA-Z_]*$', '영문,언더바(_)만 입력 가능합니다.')], verbose_name='배치 영문명(알파벳+언더바만 가능)')),
                ('target_table', models.CharField(default='None', max_length=100, verbose_name='대상 테이블')),
                ('use_yn', models.CharField(choices=[('1', 'Y'), ('0', 'N')], default='0', max_length=30, verbose_name='사용여부')),
                ('dbms_type', models.CharField(choices=[('1', 'ORACLE'), ('2', 'MySQL'), ('3', 'MariaDB'), ('4', 'PostgreSQL'), ('5', 'MSSQL'), ('6', 'SybaseIQ')], default='1', max_length=30, verbose_name='DBMS구분')),
                ('batch_type', models.CharField(choices=[('2', 'GSSHOP 사원 수집 배치'), ('1', 'SmartDBA 내부 배치'), ('0', 'Staging 배치')], default='0', max_length=30, verbose_name='배치구분')),
                ('reg_dtm', models.DateTimeField(auto_now_add=True, verbose_name='등록일자')),
                ('mod_dtm', models.DateTimeField(auto_now=True, verbose_name='수정일자')),
                ('sql_text', models.TextField(default='SELECT 1 FROM DUAL', max_length=10000, verbose_name='관련SQL')),
                ('batch_order', models.IntegerField(default=100, verbose_name='배치구분 별 실행순서')),
                ('id_mod_user', models.ForeignKey(blank=True, db_column='id_mod_user', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='User_BatchList_mod_user', to=settings.AUTH_USER_MODEL, verbose_name='수정자')),
                ('id_reg_user', models.ForeignKey(blank=True, db_column='id_reg_user', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='User_BatchList_reg_user', to=settings.AUTH_USER_MODEL, verbose_name='등록자')),
            ],
            options={
                'verbose_name': '9-1.SmartDBA배치',
                'verbose_name_plural': 'SmartDBA배치',
                'db_table': 'cust_batch_list',
            },
        ),
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_name', models.CharField(default=0, max_length=100, verbose_name='채널명')),
                ('reg_dtm', models.DateTimeField(auto_now_add=True, verbose_name='등록일자')),
                ('mod_dtm', models.DateTimeField(auto_now=True, verbose_name='수정일자')),
                ('exp_order', models.IntegerField(blank=True, default=0, null=True, verbose_name='화면노출순서(0이면 노출 안됨)')),
            ],
            options={
                'verbose_name': '0-2.채널구분 (기간계/정보계/MCPC)',
                'verbose_name_plural': '0-2.채널구분 (기간계/정보계/MCPC)',
                'db_table': 'cust_channel',
            },
        ),
        migrations.CreateModel(
            name='ColumnList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reg_dtm', models.DateTimeField(auto_now_add=True, verbose_name='등록일자')),
                ('mod_dtm', models.DateTimeField(auto_now=True, verbose_name='수정일자')),
                ('column_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='컬럼명')),
                ('col_comments', models.CharField(blank=True, max_length=4000, null=True, verbose_name='컬럼코멘트')),
                ('column_id', models.IntegerField(blank=True, null=True, verbose_name='컬럼순서')),
                ('pk_yn', models.CharField(blank=True, choices=[('1', 'Y'), ('0', 'N')], default='0', max_length=30, null=True, verbose_name='PK여부')),
                ('data_type', models.CharField(blank=True, max_length=100, null=True, verbose_name='데이터타입')),
                ('personal_info', models.CharField(blank=True, choices=[('1', 'Y'), ('0', 'N')], max_length=100, null=True, verbose_name='개인정보유무')),
                ('secu_yn', models.CharField(blank=True, choices=[('1', 'Y'), ('0', 'N')], max_length=30, null=True, verbose_name='개인정보여부')),
                ('secu_typ', models.CharField(blank=True, max_length=100, null=True, verbose_name='개인정보타입')),
                ('secu_tds_yn', models.CharField(blank=True, choices=[('1', 'Y'), ('0', 'N')], max_length=30, null=True, verbose_name='데이터변조여부')),
                ('secu_tds_enc_typ', models.CharField(blank=True, max_length=100, null=True, verbose_name='데이터변조타입')),
                ('secu_pis_yn', models.CharField(blank=True, choices=[('1', 'Y'), ('0', 'N')], max_length=30, null=True, verbose_name='유효기간제여부')),
                ('secu_pin_yn', models.CharField(blank=True, choices=[('1', 'Y'), ('0', 'N')], max_length=30, null=True, verbose_name='고유식별번호여부')),
                ('secu_remark', models.TextField(blank=True, max_length=4000, null=True, verbose_name='비고')),
                ('column_explain', models.TextField(blank=True, max_length=4000, null=True, verbose_name='설명')),
                ('biz_label', models.CharField(blank=True, max_length=100, null=True, verbose_name='업무용어')),
                ('biz_path', models.CharField(blank=True, max_length=100, null=True, verbose_name='업무경로')),
                ('code_key', models.CharField(blank=True, max_length=100, null=True, verbose_name='매핑코드값')),
                ('sql_text', models.TextField(blank=True, max_length=4000, null=True, verbose_name='관련SQL')),
                ('column_type', models.CharField(blank=True, choices=[('2', '개별코드'), ('1', '공통코드'), ('0', '일반컬럼')], default='0', max_length=100, null=True, verbose_name='컬럼타입')),
                ('oper_cd', models.CharField(blank=True, choices=[('1', '관리'), ('2', '현행화'), ('3', '운영'), ('4', '개발')], default='3', max_length=30, null=True, verbose_name='운영구분')),
                ('owner', models.CharField(blank=True, max_length=100, null=True, verbose_name='소유자')),
                ('table_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='테이블 물리명')),
                ('comments', models.CharField(blank=True, max_length=4000, null=True, verbose_name='테이블 논리명')),
                ('db_use', models.CharField(blank=True, max_length=100, null=True, verbose_name='db용도')),
            ],
            options={
                'verbose_name': '2-1 Column 마스터',
                'verbose_name_plural': '2-1.Column 마스터',
                'db_table': 'cust_column_list',
            },
        ),
        migrations.CreateModel(
            name='DataList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reg_dtm', models.DateTimeField(auto_now_add=True, verbose_name='등록일자')),
                ('mod_dtm', models.DateTimeField(auto_now=True, verbose_name='수정일자')),
                ('data_title', models.CharField(blank=True, max_length=1000, null=True, verbose_name='제목')),
                ('data_explain', models.TextField(blank=True, max_length=4000, null=True, verbose_name='설명')),
                ('sql_text', models.TextField(blank=True, max_length=10000, null=True, verbose_name='관련SQL')),
                ('exp_order', models.IntegerField(blank=True, default=1000, null=True, verbose_name='화면노출순서')),
                ('exp_yn', models.CharField(blank=True, choices=[('1', 'Y'), ('0', 'N')], default='0', max_length=100, null=True, verbose_name='노출여부')),
            ],
            options={
                'verbose_name': '3-1.노출 데이터',
                'verbose_name_plural': '3-1.노출 데이터',
                'db_table': 'cust_data_list',
            },
        ),
        migrations.CreateModel(
            name='DataType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_type', models.CharField(max_length=100, verbose_name='데이터유형')),
                ('reg_dtm', models.DateTimeField(auto_now_add=True, verbose_name='등록일자')),
                ('mod_dtm', models.DateTimeField(auto_now=True, verbose_name='수정일자')),
                ('exp_order', models.IntegerField(blank=True, default=0, null=True, verbose_name='화면노출순서(0이면 노출 안됨)')),
                ('id_mod_user', models.ForeignKey(blank=True, db_column='id_mod_user', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='User_DataType_mod_user', to=settings.AUTH_USER_MODEL, verbose_name='수정자')),
                ('id_reg_user', models.ForeignKey(blank=True, db_column='id_reg_user', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='User_DataType_reg_user', to=settings.AUTH_USER_MODEL, verbose_name='등록자')),
            ],
            options={
                'verbose_name': '0-3.데이터유형구분 (real/staging...)',
                'verbose_name_plural': '0-3.데이터유형구분 (real/staging...)',
                'db_table': 'cust_data_type',
            },
        ),
        migrations.CreateModel(
            name='DbDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oper_cd', models.CharField(blank=True, choices=[('1', '관리'), ('2', '현행화'), ('3', '운영'), ('4', '개발')], default='3', max_length=30, null=True, verbose_name='운영구분')),
                ('db_nm', models.CharField(max_length=100, verbose_name='db명')),
                ('host_nm', models.CharField(max_length=100, verbose_name='호스트명')),
                ('svr_ip', models.CharField(blank=True, max_length=100, null=True, verbose_name='서버ip')),
                ('svc_ip', models.CharField(blank=True, max_length=100, null=True, verbose_name='서비스ip')),
                ('port', models.CharField(blank=True, max_length=100, null=True, verbose_name='포트')),
                ('inst_nm', models.CharField(max_length=100, verbose_name='db명')),
                ('reg_dtm', models.DateTimeField(auto_now_add=True, null=True, verbose_name='등록일자')),
                ('mod_dtm', models.DateTimeField(auto_now=True, null=True, verbose_name='수정일자')),
                ('db_typ', models.CharField(blank=True, choices=[('1', 'ORACLE'), ('2', 'MySQL'), ('3', 'MariaDB'), ('4', 'PostgreSQL'), ('5', 'MSSQL'), ('6', 'SybaseIQ')], default='1', max_length=30, null=True, verbose_name='DBMS종류')),
                ('db_ver', models.CharField(blank=True, max_length=100, null=True, verbose_name='DBMS버전')),
                ('tns_desc', models.TextField(blank=True, max_length=4000, null=True, verbose_name='tns정보')),
                ('db_order', models.IntegerField(default=1, verbose_name='DB노드번호')),
            ],
            options={
                'verbose_name': '1-1.Database 상세',
                'verbose_name_plural': '1-1.Database 상세',
                'db_table': 'cust_db_detail',
            },
        ),
        migrations.CreateModel(
            name='DbList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('db_use', models.CharField(max_length=100, verbose_name='db용도')),
                ('reg_dtm', models.DateTimeField(auto_now_add=True, null=True, verbose_name='등록일자')),
                ('mod_dtm', models.DateTimeField(auto_now=True, null=True, verbose_name='수정일자')),
                ('map_coords', models.CharField(blank=True, max_length=100, null=True, verbose_name='Database MAP 좌표')),
                ('db_desc', models.TextField(blank=True, max_length=4000, null=True, verbose_name='DB설명')),
                ('privacy_yn', models.CharField(blank=True, choices=[('1', 'Y'), ('0', 'N')], default='0', max_length=30, null=True, verbose_name='개인정보 데이터 보유 여부')),
                ('exp_order', models.IntegerField(blank=True, default=0, null=True, verbose_name='화면노출순서')),
                ('id_channel', models.ForeignKey(blank=True, db_column='id_channel', null=True, on_delete=django.db.models.deletion.PROTECT, to='database.Channel', verbose_name='채널명')),
            ],
            options={
                'verbose_name': '1-0.Database 마스터',
                'verbose_name_plural': '1-0.Database 마스터',
                'db_table': 'cust_db_list',
            },
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain_name', models.CharField(default='', max_length=100, verbose_name='도메인명')),
                ('reg_dtm', models.DateTimeField(auto_now_add=True, verbose_name='등록일자')),
                ('mod_dtm', models.DateTimeField(auto_now=True, verbose_name='수정일자')),
            ],
            options={
                'verbose_name': '0-1.도메인구분 (고객/상품/주문....)',
                'verbose_name_plural': '0-1.도메인구분 (고객/상품/주문....)',
                'db_table': 'cust_domain',
            },
        ),
        migrations.CreateModel(
            name='ProcessList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('process_nm', models.CharField(max_length=100, verbose_name='프로세스명')),
                ('ordering', models.IntegerField(blank=True, default=0, null=True, verbose_name='순서')),
                ('reg_dtm', models.DateTimeField(auto_now_add=True, verbose_name='등록일자')),
                ('mod_dtm', models.DateTimeField(auto_now=True, verbose_name='수정일자')),
                ('id_mod_user', models.ForeignKey(blank=True, db_column='id_mod_user', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='User_ProcessList_mod_user', to=settings.AUTH_USER_MODEL, verbose_name='수정자')),
                ('id_reg_user', models.ForeignKey(blank=True, db_column='id_reg_user', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='User_ProcessList_reg_user', to=settings.AUTH_USER_MODEL, verbose_name='등록자')),
            ],
            options={
                'verbose_name': '고객 행동 프로세스 (앱실행/주문완료...)',
                'verbose_name_plural': '고객 행동 프로세스 (앱실행/주문완료...)',
                'db_table': 'cust_process_list',
            },
        ),
        migrations.CreateModel(
            name='TableList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reg_dtm', models.DateTimeField(auto_now_add=True, verbose_name='등록일자')),
                ('mod_dtm', models.DateTimeField(auto_now=True, verbose_name='수정일자')),
                ('owner', models.CharField(max_length=100, verbose_name='소유자')),
                ('table_name', models.CharField(max_length=100, verbose_name='테이블 물리명')),
                ('comments', models.CharField(blank=True, max_length=4000, null=True, verbose_name='테이블 논리명')),
                ('tablespace_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='테이블스페이스명')),
                ('num_rows', models.IntegerField(blank=True, default=0, null=True, verbose_name='Row개수')),
                ('last_analyzed', models.DateTimeField(blank=True, null=True, verbose_name='Last_Analyzed')),
                ('created', models.DateTimeField(blank=True, null=True, verbose_name='Created')),
                ('last_ddl_time', models.DateTimeField(blank=True, null=True, verbose_name='Last_DDL_Time')),
                ('total_mb', models.IntegerField(blank=True, default=0, null=True, verbose_name='사이즈(MB)')),
                ('lob_mb', models.IntegerField(blank=True, default=0, null=True, verbose_name='LOB사이즈(MB)')),
                ('drop_yn', models.CharField(blank=True, choices=[('1', 'Y'), ('0', 'N')], default='0', max_length=30, verbose_name='삭제여부')),
                ('drop_dtm', models.DateTimeField(blank=True, null=True, verbose_name='삭제일자')),
                ('cdc_yn', models.CharField(choices=[('1', 'Y'), ('0', 'N')], default='0', max_length=30, verbose_name='CDC대상여부')),
                ('table_explain', models.TextField(blank=True, max_length=4000, null=True, verbose_name='설명')),
                ('sql_exp_column', models.CharField(blank=True, max_length=200, null=True, verbose_name='SQL노출컬럼')),
                ('pk_column', models.CharField(blank=True, max_length=100, null=True, verbose_name='PK 컬럼')),
                ('config_sql', models.TextField(blank=True, null=True, verbose_name='집계SQL')),
                ('exp_order', models.IntegerField(blank=True, default=1000, null=True, verbose_name='화면노출순서(0이면 노출 안됨)')),
                ('oper_cd', models.CharField(blank=True, choices=[('1', '관리'), ('2', '현행화'), ('3', '운영'), ('4', '개발')], default='3', max_length=30, null=True, verbose_name='운영구분')),
                ('db_use', models.CharField(blank=True, max_length=100, null=True, verbose_name='db용도')),
                ('id_datatype', models.ForeignKey(blank=True, db_column='id_datatype', null=True, on_delete=django.db.models.deletion.PROTECT, to='database.DataType', verbose_name='DATA유형')),
                ('id_dblist', models.ForeignKey(db_column='id_dblist', on_delete=django.db.models.deletion.PROTECT, to='database.DbList', verbose_name='DB명')),
                ('id_domain', models.ForeignKey(blank=True, db_column='id_domain', null=True, on_delete=django.db.models.deletion.PROTECT, to='database.Domain', verbose_name='업무도메인명')),
                ('id_mod_user', models.ForeignKey(blank=True, db_column='id_mod_user', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='User_TableList_mod_user', to=settings.AUTH_USER_MODEL, verbose_name='수정자')),
                ('id_reg_user', models.ForeignKey(blank=True, db_column='id_reg_user', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='User_TableList_reg_user', to=settings.AUTH_USER_MODEL, verbose_name='등록자')),
                ('id_tablelist_member_table', models.ManyToManyField(blank=True, db_column='id_tablelist_member_table', db_table='cust_member_table', max_length=100, related_name='_tablelist_id_tablelist_member_table_+', to='database.TableList', verbose_name='구성 테이블')),
                ('id_tablelist_parent_table', models.ForeignKey(blank=True, db_column='id_tablelist_parent_table', max_length=100, null=True, on_delete=django.db.models.deletion.PROTECT, to='database.TableList', verbose_name='부모테이블')),
                ('id_user_dev_manager', models.ForeignKey(blank=True, db_column='id_user_dev_manager', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='dev_manager', to=settings.AUTH_USER_MODEL, verbose_name='개발담당자')),
                ('id_user_it_manager', models.ForeignKey(blank=True, db_column='id_user_it_manager', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='it_manager', to=settings.AUTH_USER_MODEL, verbose_name='IT담당자')),
            ],
            options={
                'verbose_name': '2-0.Table 마스터',
                'verbose_name_plural': '2-0.Table 마스터',
                'db_table': 'cust_table_list',
            },
        ),
        migrations.CreateModel(
            name='UserClickData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.CharField(max_length=100, verbose_name='데이터')),
                ('id_data', models.IntegerField(default=0, verbose_name='데이터번호')),
                ('data_type', models.IntegerField(default=0, verbose_name='데이터타입')),
                ('reg_dtm', models.DateTimeField(auto_now_add=True, verbose_name='등록일자')),
                ('id_reg_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='등록자')),
            ],
            options={
                'verbose_name': '사용자 클릭데이터',
                'verbose_name_plural': '사용자 클릭데이터',
                'db_table': 'cust_user_click_data',
            },
        ),
        migrations.CreateModel(
            name='UserExecuteSQL',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sql_text', models.TextField(default='SELECT 1 FROM DUAL', max_length=10000, verbose_name='관련SQL')),
                ('reg_dtm', models.DateTimeField(auto_now_add=True, verbose_name='등록일자')),
                ('execute_time', models.FloatField(blank=True, null=True, verbose_name='수행시간')),
                ('id_reg_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='등록자')),
            ],
            options={
                'verbose_name': '사용자 실행SQL',
                'verbose_name_plural': '사용자 실행SQL',
                'db_table': 'cust_user_execute_sql',
            },
        ),
        migrations.CreateModel(
            name='UserRequestData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='용어명')),
                ('data_text', models.TextField(blank=True, max_length=10000, null=True, verbose_name='요청내용')),
                ('reg_dtm', models.DateTimeField(auto_now_add=True, verbose_name='등록일자')),
                ('id_reg_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='등록자')),
            ],
            options={
                'verbose_name': '사용자 데이터 요청',
                'verbose_name_plural': '사용자 데이터 요청',
                'db_table': 'cust_user_request_data',
            },
        ),
        migrations.CreateModel(
            name='UserRequestWord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='용어명')),
                ('word_text', models.TextField(blank=True, max_length=10000, null=True, verbose_name='요청내용')),
                ('reg_dtm', models.DateTimeField(auto_now_add=True, verbose_name='등록일자')),
                ('id_reg_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='등록자')),
            ],
            options={
                'verbose_name': '사용자 데이터 요청',
                'verbose_name_plural': '사용자 데이터 요청',
                'db_table': 'cust_user_request_word',
            },
        ),
        migrations.CreateModel(
            name='UserSearchKeyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(max_length=100, verbose_name='검색어')),
                ('reg_dtm', models.DateTimeField(auto_now_add=True, verbose_name='등록일자')),
                ('id_reg_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='등록자')),
            ],
            options={
                'verbose_name': '사용자 검색키워드',
                'verbose_name_plural': '사용자 검색키워드',
                'db_table': 'cust_user_search_keyword',
            },
        ),
        migrations.AddField(
            model_name='dbdetail',
            name='id_dblist',
            field=models.ForeignKey(blank=True, db_column='id_dblist', null=True, on_delete=django.db.models.deletion.PROTECT, to='database.DbList', verbose_name='DB명'),
        ),
        migrations.AddField(
            model_name='datalist',
            name='id_domain',
            field=models.ForeignKey(blank=True, db_column='id_domain', null=True, on_delete=django.db.models.deletion.PROTECT, to='database.Domain', verbose_name='업무도메인명'),
        ),
        migrations.AddField(
            model_name='datalist',
            name='id_mod_user',
            field=models.ForeignKey(blank=True, db_column='id_mod_user', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='User_DataList_mod_user', to=settings.AUTH_USER_MODEL, verbose_name='수정자'),
        ),
        migrations.AddField(
            model_name='datalist',
            name='id_processlist',
            field=models.ForeignKey(blank=True, db_column='id_processlist', null=True, on_delete=django.db.models.deletion.PROTECT, to='database.ProcessList', verbose_name='프로세스명'),
        ),
        migrations.AddField(
            model_name='datalist',
            name='id_reg_user',
            field=models.ForeignKey(blank=True, db_column='id_reg_user', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='User_DataList_reg_user', to=settings.AUTH_USER_MODEL, verbose_name='등록자'),
        ),
        migrations.AddField(
            model_name='datalist',
            name='id_tablelist',
            field=models.ForeignKey(blank=True, db_column='id_tablelist', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='r_id_tablelist_datalist', to='database.TableList', verbose_name='대표테이블명'),
        ),
        migrations.AddField(
            model_name='datalist',
            name='id_tablelist_member_table',
            field=models.ManyToManyField(blank=True, db_column='id_tablelist_member_table', db_table='cust_data_member_table_datalist', max_length=100, related_name='r_id_tablelist_member_table', to='database.TableList', verbose_name='구성 테이블명'),
        ),
        migrations.AddField(
            model_name='columnlist',
            name='id_dblist',
            field=models.ForeignKey(blank=True, db_column='id_dblist', null=True, on_delete=django.db.models.deletion.PROTECT, to='database.DbList', verbose_name='DB명'),
        ),
        migrations.AddField(
            model_name='columnlist',
            name='id_tablelist',
            field=models.ForeignKey(blank=True, db_column='id_tablelist', max_length=100, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='id_tablelist', to='database.TableList', verbose_name='테이블명'),
        ),
        migrations.AddField(
            model_name='columnlist',
            name='id_tablelist_code_table',
            field=models.ForeignKey(blank=True, db_column='id_tablelist_code_table', max_length=100, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='id_tablelist_code_table', to='database.TableList', verbose_name='코드테이블'),
        ),
    ]
